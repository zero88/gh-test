name: docker

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      type:
        description: 'Type'
        required: true
        default: javascript

jobs:
  hello_world_job:
    runs-on: ubuntu-latest
    services:
      registry:
        image: zero88/registry:latest
        ports:
          - 5000:5000
        options: >-
          -v /home/runner:/tmp/registry
          --name registry

    name: Docker...
    steps:
      - uses: actions/checkout@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /home/runner/docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Check folder
        run: |
          docker exec registry ls -la /tmp/registry
          echo "*************************************************"
          ls -la /home/runner
          echo "*************************************************"
          apt intall tree -y
          set +e
          tree -aphug --du -L 2 /home/runner/docker

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host

      - name: Build and push to local registry
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          tags: localhost:5000/test:latest
          cache-from: type=registry,ref=localhost:5000/test:buildcache
          cache-to: type=registry,ref=localhost:5000/test:buildcache,mode=max
          push: true

      - name: Inspect
        run: |
          whoami
          id -u $whoami
          id -g $whoami
          id -G $whoami

          echo "*************************************************"

          tree -aphug --du -L 2 /home/runner/docker
          echo "*************************************************"
          image=localhost:5000/test
          tag=latest
          name=test
          platforms=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64

          mkdir -p /tmp/zip
          IFS=',' read -ra ARR <<< "$platforms"
          for plat in "${ARR[@]}"; do
            p=$(echo "${plat//\//}")
            p=$(echo "${p//linux/}")
            perImage=$(docker buildx imagetools inspect $image:$tag | grep -B 2 $plat | grep Name: | awk '{print $2}')
            folder=/tmp/images/$name-$p
            mkdir -p $folder
            docker create --name $name-$p $perImage && docker cp $name-$p:/log $folder/log && docker rm $name-$p
            cd $folder; zip -r /tmp/zip/$name.$p.zip ./; cd -
            echo "==============================================="
          done

          echo "*************************************************"
          ls -la /tmp/zip

          echo "*************************************************"

      - uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: /tmp/zip/*.zip
          retention-days: 1
